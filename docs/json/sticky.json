{"main":["sticky.js"],"options":[{"name":"customClass","type":"string","default":"''","description":"Class applied to instance"},{"name":"maxWidth","type":"string","default":"Infinity","description":"Width at which to auto-disable plugin"},{"name":"mobileMaxWidth","type":"string","default":"'740px'","description":"Width at which to auto-disable mobile styles"},{"name":"theme","type":"string","default":"\"fs-light\"","description":"Theme class name"}],"events":[{"name":"update.sticky","description":"Sticky activated"}],"methods":[{"name":"defaults","description":"Extends plugin default settings; effects instances created hereafter.","params":[{"name":"options","type":"object","default":"{}","description":"New plugin defaults"}],"examples":["$.sticky(\"defaults\", { ... });"]},{"name":"destroy","description":"Removes plugin instance.","examples":["$(\".target\").sticky(\"destroy\");"]}],"name":"Sticky","type":"widget","description":"A jQuery plugin for sticky elements.","dependencies":["jQuery","core.js","mediaquery.js"],"css":[{"name":".fs-sticky-element","type":"element","description":"Target elmement"},{"name":".fs-sticky-clone","type":"element","description":"Cloned elemtn"},{"name":".fs-sticky.fs-sticky-stuck","type":"modifier","description":"Indicates stuck state"},{"name":".fs-sticky-clone.fs-sticky-stuck","type":"modifier","description":"Indicates stuck state"}],"use":"### Basic\n\nSticky stuff.\n","demo":"<h4>Basic</h4>\r\n\r\n<!-- START: FIRSTDEMO -->\r\n\r\n<style>\n\t.sticky_container { border: 1px solid #999; height: 500px; }\n\t.sticky_element { color: white; font-size: 12px; height: 50px; line-height: 50px; overflow: hidden; padding: 0; text-align: center; width: 100%; }\n\t.sticky_element.green { background: green; z-index: 10; }\n\t.sticky_element.blue  { background: blue; }\n\t.sticky_element.red   { background: red; }\n</style>\n\n<!-- <div class=\"sticky_container sticky_1\"> -->\n\t<div class=\"sticky_element green js-sticky\" data-sticky-options='{\"offset\":50}'>Sticky</div>\n\t<br><br><br>\n<!-- </div> -->\n\n<div class=\"sticky_container sticky_2\">\n\t<div class=\"sticky_element blue js-sticky\" data-sticky-options='{\"offset\":100}' data-sticky-container=\".sticky_2\">Sticky</div>\n</div>\n\n<div class=\"sticky_container sticky_3\">\n\t<div class=\"sticky_element red js-sticky\" data-sticky-options='{\"offset\":100}' data-sticky-container=\".sticky_3\">Sticky</div>\n</div>\n\n<div class=\"sticky_container sticky_4\">\n\t<div class=\"sticky_element blue js-sticky\" data-sticky-options='{\"offset\":100}' data-sticky-container=\".sticky_4\">Sticky</div>\n</div>\n\n<div class=\"sticky_container sticky_5\">\n\t<div class=\"sticky_element red js-sticky\" data-sticky-options='{\"offset\":100}' data-sticky-container=\".sticky_5\">Sticky</div>\n</div>\n\r\n<!-- <div class=\"demo_container\">\n\t<div class=\"demo_example\">\r\n\t\t<div class=\"button toggle js-swap\" data-swap-target=\".toggle_target_0\">Handle</div>\r\n\t\t<div class=\"toggle_target toggle_target_0\">Content</div>\r\n\t</div>\r\n\t<div class=\"demo_code\">\r\n\t\t<pre><code class=\"language-html\">&lt;h2 class=&quot;swap&quot; data-swap-target=&quot;.swap_target&quot;&gt;Handle&lt;/h2&gt;\r\n&lt;div class=&quot;swap_target&quot;&gt;Content&lt;/div&gt;</code></pre>\r\n\t\t<pre><code class=\"language-javascript\">$(\".swap\").swap();</code></pre>\r\n\t</div>\r\n</div> -->\n\r\n<!-- END: FIRSTDEMO -->\n","document":"# Sticky\n\nA jQuery plugin for sticky elements.\n\n<!-- HEADER END -->\n\n<!-- NAV START -->\n\n* [Use](#use)\n* [Options](#options)\n* [Events](#events)\n* [Methods](#methods)\n* [CSS](#css)\n\n<!-- NAV END -->\n\n<!-- DEMO BUTTON -->\n\n## <a name=\"use\"></a> Using Sticky\n\n\n#### Main\n\n```markup\nsticky.js\n```\n\n\n#### Dependencies\n\n```markup\njQuery\ncore.js\nmediaquery.js\n```\n\n### Basic\n\nSticky stuff.\n\n\n\n## <a name=\"options\"></a> Options\n\nSet instance options by passing a valid object at initialization, or to the public `defaults` method. Custom options for a specific instance can also be set by attaching a `data-sticky-options` attribute to the target elment. This attribute should contain the properly formatted JSON object representing the custom options.\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `customClass` | `string` | `''` | Class applied to instance |\n| `maxWidth` | `string` | `Infinity` | Width at which to auto-disable plugin |\n| `mobileMaxWidth` | `string` | `'740px'` | Width at which to auto-disable mobile styles |\n| `theme` | `string` | `\"fs-light\"` | Theme class name |\n\n<hr>\n## <a name=\"events\"></a> Events\n\nEvents are triggered on the target instance's element, unless otherwise stated.\n\n| Event | Description |\n| --- | --- |\n| `update.sticky` | Sticky activated |\n\n<hr>\n## <a name=\"methods\"></a> Methods\n\nMethods are publicly available to all active instances, unless otherwise stated.\n\n### defaults\n\nExtends plugin default settings; effects instances created hereafter.\n\n```javascript\n$.sticky(\"defaults\", { ... });\n```\n\n#### Parameters\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `options` | `object` | `{}` | New plugin defaults |\n\n### destroy\n\nRemoves plugin instance.\n\n```javascript\n$(\".target\").sticky(\"destroy\");\n```\n\n<hr>\n## <a name=\"css\"></a> CSS\n\n| Class | Type | Description |\n| --- | --- | --- |\n| `.fs-sticky-element` | `element` | Target elmement |\n| `.fs-sticky-clone` | `element` | Cloned elemtn |\n| `.fs-sticky.fs-sticky-stuck` | `modifier` | Indicates stuck state |\n| `.fs-sticky-clone.fs-sticky-stuck` | `modifier` | Indicates stuck state |\n\n"}